

set (qan_plugin_files
    ${CMAKE_CURRENT_SOURCE_DIR}/qanPlugin.cpp
    ${CMAKE_CURRENT_SOURCE_DIR}/qanPlugin.h
)

# Configure Qt
set(CMAKE_AUTOMOC ON)
qt_wrap_cpp(qan_source_files, qan_header_files)   # Creates .moc files from sources
set(CMAKE_AUTORCC ON)
set_property(DIRECTORY APPEND PROPERTY COMPILE_DEFINITIONS $<$<CONFIG:Debug>:QT_QML_DEBUG>)

# Configure QuickQanava library ###############################################
if(QUICK_QANAVA_BUILD_STATIC_QRC)
    list(APPEND qan_resources QuickQanava_static.qrc)
else()
    list(APPEND qan_resources QuickQanava_plugin.qrc)
endif(QUICK_QANAVA_BUILD_STATIC_QRC)

list(APPEND qan_resources GraphicalEffects5/QuickQanavaGraphicalEffects.qrc)
add_library(QuickQanava STATIC ${qan_source_files} ${qan_header_files} ${qan_resources} ${quickcontainers_source_files} ${quickcontainers_header_files})

target_include_directories(QuickQanava
    PUBLIC
        $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}>
        $<INSTALL_INTERFACE:include>
    )

target_compile_features(QuickQanava
    PUBLIC
        cxx_std_14
    )

install(FILES
    ${qan_header_files}
    DESTINATION include/quickqanava
    )

install(TARGETS QuickQanava
    EXPORT Targets
    LIBRARY DESTINATION lib
    ARCHIVE DESTINATION lib
    RUNTIME DESTINATION bin
    INCLUDES DESTINATION include/quickqanava
    )

set(CMAKE_INCLUDE_CURRENT_DIR ON)
target_link_libraries(QuickQanava PUBLIC Qt5::Core
                                         Qt5::Gui
                                         Qt5::Qml
                                         Qt5::Quick
                                         Qt5::QuickControls2)
if(QUICK_QANAVA_BUILD_STATIC_QRC)
    target_compile_definitions(QuickQanava PUBLIC -DQUICKQANAVA_STATIC)
endif(QUICK_QANAVA_BUILD_STATIC_QRC)

